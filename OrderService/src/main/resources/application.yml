server:
  port: 8081
  error:
    include-message: always
spring:
  application:
    name: OrderService
  datasource:
    url: jdbc:postgresql://localhost:15432/order_service
    username: postgres
    password: secret
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
  # Kafka properties
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: order-placed
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
inventory-service:
  url: http://localhost:8082
springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /api-docs
# Actuator endpoints
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
resilience4j:
  # Resilience4j circuit breaker properties
  circuitbreaker:
    instances:
      inventory:
        register-health-indicator: true # Synchronizing with management.health
        sliding-window-type: COUNT_BASED
        sliding-window-size: 10 # Calculating failure rate based on X last requests
        failure-rate-threshold: 50 # X% of requests in sliding window should be failed
        # to OPEN circuit breaker
        wait-duration-in-open-state: 10s # Waiting X seconds before circuit goes to half-open state
        permitted-number-of-calls-in-half-open-state: 3 # X failed requests required to go from half-state
        automatic-transition-from-open-to-half-open-enabled: true
        minimum-number-of-calls: 5 # Starting failure rate at 5 requests
  # Resilience4j timeout properties
  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s
  # Resilience4j retry properties
  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 2s