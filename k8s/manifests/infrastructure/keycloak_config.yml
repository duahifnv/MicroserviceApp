apiVersion: v1
kind: Secret
metadata:
  name: keycloak-admin-secret
data:
  KC_DB_PASSWORD: c2VjcmV0
  KEYCLOAK_ADMIN_PASSWORD: YWRtaW4=
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
spec:
  selector:
    app: keycloak
  ports:
    - protocol: TCP
      port: 7080
      targetPort: 7080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-realm-config
data:
  KC_DB: "postgres"
  KC_DB_URL: "jdbc:postgresql://postgres:5432/keycloak"
  KC_DB_USERNAME: "keycloak"
  KEYCLOAK_ADMIN: "admin"

  keycloak-realm-import.json: |-
    {
        "id": "478ccb04-0355-48f4-88a5-30881ee29061",
        "realm": "spring-microservices-security-realm",
        "displayName": "",
        "displayNameHtml": "",
        "notBefore": 0,
        "defaultSignatureAlgorithm": "RS256",
        "revokeRefreshToken": false,
        "refreshTokenMaxReuse": 0,
        "accessTokenLifespan": 300,
        "accessTokenLifespanForImplicitFlow": 900,
        "ssoSessionIdleTimeout": 1800,
        "ssoSessionMaxLifespan": 36000,
        "ssoSessionIdleTimeoutRememberMe": 0,
        "ssoSessionMaxLifespanRememberMe": 0,
        "offlineSessionIdleTimeout": 2592000,
        "offlineSessionMaxLifespanEnabled": false,
        "offlineSessionMaxLifespan": 5184000,
        "clientSessionIdleTimeout": 0,
        "clientSessionMaxLifespan": 0,
        "clientOfflineSessionIdleTimeout": 0,
        "clientOfflineSessionMaxLifespan": 0,
        "accessCodeLifespan": 60,
        "accessCodeLifespanUserAction": 300,
        "accessCodeLifespanLogin": 1800,
        "actionTokenGeneratedByAdminLifespan": 43200,
        "actionTokenGeneratedByUserLifespan": 300,
        "oauth2DeviceCodeLifespan": 600,
        "oauth2DevicePollingInterval": 5,
        "enabled": true,
        "sslRequired": "external",
        "registrationAllowed": true,
        "registrationEmailAsUsername": false,
        "rememberMe": false,
        "verifyEmail": false,
        "loginWithEmailAllowed": true,
        "duplicateEmailsAllowed": false,
        "resetPasswordAllowed": false,
        "editUsernameAllowed": false,
        "bruteForceProtected": false,
        "permanentLockout": false,
        "maxTemporaryLockouts": 0,
        "bruteForceStrategy": "MULTIPLE",
        "maxFailureWaitSeconds": 900,
        "minimumQuickLoginWaitSeconds": 60,
        "waitIncrementSeconds": 60,
        "quickLoginCheckMilliSeconds": 1000,
        "maxDeltaTimeSeconds": 43200,
        "failureFactor": 30,
        "roles": {
            "realm": [
                {
                    "id": "cc86f7c3-04d5-4dae-9f6b-4d0a469135e7",
                    "name": "uma_authorization",
                    "description": "${role_uma_authorization}",
                    "composite": false,
                    "clientRole": false,
                    "containerId": "478ccb04-0355-48f4-88a5-30881ee29061",
                    "attributes": {}
                },
                {
                    "id": "3379a7c5-af24-455e-a4bb-65ee49a86ea0",
                    "name": "default-roles-spring-microservices-security-realm",
                    "description": "${role_default-roles}",
                    "composite": true,
                    "composites": {
                        "realm": [
                            "offline_access",
                            "uma_authorization"
                        ],
                        "client": {
                            "account": [
                                "view-profile",
                                "manage-account"
                            ]
                        }
                    },
                    "clientRole": false,
                    "containerId": "478ccb04-0355-48f4-88a5-30881ee29061",
                    "attributes": {}
                },
                {
                    "id": "045d18ca-bfd4-4d44-ad77-20851ece5e76",
                    "name": "offline_access",
                    "description": "${role_offline-access}",
                    "composite": false,
                    "clientRole": false,
                    "containerId": "478ccb04-0355-48f4-88a5-30881ee29061",
                    "attributes": {}
                }
            ],
            "client": {
                "realm-management": [
                    {
                        "id": "35db4029-a306-4036-a88f-9a51117b2e81",
                        "name": "manage-events",
                        "description": "${role_manage-events}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "837a4694-bff3-4f92-9d8f-ee9aa489b528",
                        "name": "view-events",
                        "description": "${role_view-events}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "8847c475-1300-4f5f-a52c-272ce6770246",
                        "name": "view-users",
                        "description": "${role_view-users}",
                        "composite": true,
                        "composites": {
                            "client": {
                                "realm-management": [
                                    "query-groups",
                                    "query-users"
                                ]
                            }
                        },
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "cf033e5e-428e-4963-86e7-c14216ff7c1a",
                        "name": "query-realms",
                        "description": "${role_query-realms}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "68204c82-29c4-4a50-a070-5bc8b98ccf14",
                        "name": "query-clients",
                        "description": "${role_query-clients}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "3f118bfc-7033-4b3a-b9c3-0be5ef5ed563",
                        "name": "view-identity-providers",
                        "description": "${role_view-identity-providers}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "ab5d0256-b040-49f9-b2ef-3dbd96879af6",
                        "name": "query-users",
                        "description": "${role_query-users}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "e352c519-5a9e-46ca-8a51-9b82d0ce1ab3",
                        "name": "view-realm",
                        "description": "${role_view-realm}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "d16d8503-03f8-4906-9f5d-2b31d83eb25e",
                        "name": "manage-realm",
                        "description": "${role_manage-realm}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "4d47aa56-ca40-4e4b-8727-d9fa1d31f4e7",
                        "name": "view-authorization",
                        "description": "${role_view-authorization}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "c1af4632-11c2-4e0d-945f-92941b43aad5",
                        "name": "create-client",
                        "description": "${role_create-client}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "30c5b8f8-340b-4e77-ab47-8e82fd20a2a5",
                        "name": "realm-admin",
                        "description": "${role_realm-admin}",
                        "composite": true,
                        "composites": {
                            "client": {
                                "realm-management": [
                                    "manage-events",
                                    "view-events",
                                    "view-users",
                                    "query-realms",
                                    "query-clients",
                                    "view-identity-providers",
                                    "query-users",
                                    "view-realm",
                                    "view-authorization",
                                    "manage-realm",
                                    "create-client",
                                    "impersonation",
                                    "view-clients",
                                    "query-groups",
                                    "manage-clients",
                                    "manage-users",
                                    "manage-authorization",
                                    "manage-identity-providers"
                                ]
                            }
                        },
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "26b51721-4e67-4677-a1a0-9f064e1a5259",
                        "name": "impersonation",
                        "description": "${role_impersonation}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "bc4fc5a6-f8a7-4121-83df-9224281f71fa",
                        "name": "query-groups",
                        "description": "${role_query-groups}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "c3101186-a25b-4659-a8a9-ab26a03fb3b1",
                        "name": "view-clients",
                        "description": "${role_view-clients}",
                        "composite": true,
                        "composites": {
                            "client": {
                                "realm-management": [
                                    "query-clients"
                                ]
                            }
                        },
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "34830b4c-dbe5-4662-95b8-e76948bac556",
                        "name": "manage-clients",
                        "description": "${role_manage-clients}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "857a48e1-8794-4a4f-bf5e-a28f6c144510",
                        "name": "manage-authorization",
                        "description": "${role_manage-authorization}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "13a51ebc-9659-494f-8045-8c6087456f01",
                        "name": "manage-users",
                        "description": "${role_manage-users}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    },
                    {
                        "id": "46f40365-6f58-4abd-80f5-d349f46ac5af",
                        "name": "manage-identity-providers",
                        "description": "${role_manage-identity-providers}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "060aaa03-19e7-4854-a176-df006ea7329f",
                        "attributes": {}
                    }
                ],
                "spring-client-credentials-id": [],
                "angular-client": [],
                "security-admin-console": [],
                "admin-cli": [],
                "account-console": [],
                "broker": [
                    {
                        "id": "d0216db8-0225-40cb-af79-2238607b615b",
                        "name": "read-token",
                        "description": "${role_read-token}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "dec85fee-f0cf-4e93-b2e9-06b992cc9ef4",
                        "attributes": {}
                    }
                ],
                "account": [
                    {
                        "id": "d2eaca20-2562-48b7-a005-ff2d7a017189",
                        "name": "view-groups",
                        "description": "${role_view-groups}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "6b987279-3e8b-4266-a9bf-b395157657b0",
                        "attributes": {}
                    },
                    {
                        "id": "ce7f3eeb-a8f3-4e61-a810-2bbf90d31ffe",
                        "name": "view-applications",
                        "description": "${role_view-applications}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "6b987279-3e8b-4266-a9bf-b395157657b0",
                        "attributes": {}
                    },
                    {
                        "id": "ae367e72-8cd9-42d5-85cf-ba0b0a005905",
                        "name": "delete-account",
                        "description": "${role_delete-account}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "6b987279-3e8b-4266-a9bf-b395157657b0",
                        "attributes": {}
                    },
                    {
                        "id": "c20e6b1f-45c4-46f9-8182-30b3bc1cd80d",
                        "name": "view-consent",
                        "description": "${role_view-consent}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "6b987279-3e8b-4266-a9bf-b395157657b0",
                        "attributes": {}
                    },
                    {
                        "id": "09bb6185-79af-48fb-8416-9f0231f4dd90",
                        "name": "manage-account-links",
                        "description": "${role_manage-account-links}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "6b987279-3e8b-4266-a9bf-b395157657b0",
                        "attributes": {}
                    },
                    {
                        "id": "c067c892-8e45-4dd8-b7e0-bea046df733f",
                        "name": "view-profile",
                        "description": "${role_view-profile}",
                        "composite": false,
                        "clientRole": true,
                        "containerId": "6b987279-3e8b-4266-a9bf-b395157657b0",
                        "attributes": {}
                    },
                    {
                        "id": "dd82a877-ee2a-469e-9235-a5d67e22e464",
                        "name": "manage-consent",
                        "description": "${role_manage-consent}",
                        "composite": true,
                        "composites": {
                            "client": {
                                "account": [
                                    "view-consent"
                                ]
                            }
                        },
                        "clientRole": true,
                        "containerId": "6b987279-3e8b-4266-a9bf-b395157657b0",
                        "attributes": {}
                    },
                    {
                        "id": "d5857cb7-02d4-4bc7-afd3-b520f5a2b1de",
                        "name": "manage-account",
                        "description": "${role_manage-account}",
                        "composite": true,
                        "composites": {
                            "client": {
                                "account": [
                                    "manage-account-links"
                                ]
                            }
                        },
                        "clientRole": true,
                        "containerId": "6b987279-3e8b-4266-a9bf-b395157657b0",
                        "attributes": {}
                    }
                ]
            }
        },
        "groups": [],
        "defaultRole": {
            "id": "3379a7c5-af24-455e-a4bb-65ee49a86ea0",
            "name": "default-roles-spring-microservices-security-realm",
            "description": "${role_default-roles}",
            "composite": true,
            "clientRole": false,
            "containerId": "478ccb04-0355-48f4-88a5-30881ee29061"
        },
        "requiredCredentials": [
            "password"
        ],
        "otpPolicyType": "totp",
        "otpPolicyAlgorithm": "HmacSHA1",
        "otpPolicyInitialCounter": 0,
        "otpPolicyDigits": 6,
        "otpPolicyLookAheadWindow": 1,
        "otpPolicyPeriod": 30,
        "otpPolicyCodeReusable": false,
        "otpSupportedApplications": [
            "totpAppFreeOTPName",
            "totpAppGoogleName",
            "totpAppMicrosoftAuthenticatorName"
        ],
        "localizationTexts": {},
        "webAuthnPolicyRpEntityName": "keycloak",
        "webAuthnPolicySignatureAlgorithms": [
            "ES256",
            "RS256"
        ],
        "webAuthnPolicyRpId": "",
        "webAuthnPolicyAttestationConveyancePreference": "not specified",
        "webAuthnPolicyAuthenticatorAttachment": "not specified",
        "webAuthnPolicyRequireResidentKey": "not specified",
        "webAuthnPolicyUserVerificationRequirement": "not specified",
        "webAuthnPolicyCreateTimeout": 0,
        "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyAcceptableAaguids": [],
        "webAuthnPolicyExtraOrigins": [],
        "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
        "webAuthnPolicyPasswordlessSignatureAlgorithms": [
            "ES256",
            "RS256"
        ],
        "webAuthnPolicyPasswordlessRpId": "",
        "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
        "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
        "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
        "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
        "webAuthnPolicyPasswordlessCreateTimeout": 0,
        "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyPasswordlessAcceptableAaguids": [],
        "webAuthnPolicyPasswordlessExtraOrigins": [],
        "users": [
            {
                "id": "98027758-73fd-4456-b642-683786b4567e",
                "username": "service-account-spring-client-credentials-id",
                "emailVerified": false,
                "createdTimestamp": 1738099721652,
                "enabled": true,
                "totp": false,
                "serviceAccountClientId": "spring-client-credentials-id",
                "disableableCredentialTypes": [],
                "requiredActions": [],
                "realmRoles": [
                    "default-roles-spring-microservices-security-realm"
                ],
                "notBefore": 0,
                "groups": []
            }
        ],
        "scopeMappings": [
            {
                "clientScope": "offline_access",
                "roles": [
                    "offline_access"
                ]
            }
        ],
        "clientScopeMappings": {
            "account": [
                {
                    "client": "account-console",
                    "roles": [
                        "manage-account",
                        "view-groups"
                    ]
                }
            ]
        },
        "clients": [
            {
                "id": "6b987279-3e8b-4266-a9bf-b395157657b0",
                "clientId": "account",
                "name": "${client_account}",
                "rootUrl": "${authBaseUrl}",
                "baseUrl": "/realms/spring-microservices-security-realm/account/",
                "surrogateAuthRequired": false,
                "enabled": true,
                "alwaysDisplayInConsole": false,
                "clientAuthenticatorType": "client-secret",
                "redirectUris": [
                    "/realms/spring-microservices-security-realm/account/*"
                ],
                "webOrigins": [],
                "notBefore": 0,
                "bearerOnly": false,
                "consentRequired": false,
                "standardFlowEnabled": true,
                "implicitFlowEnabled": false,
                "directAccessGrantsEnabled": false,
                "serviceAccountsEnabled": false,
                "publicClient": true,
                "frontchannelLogout": false,
                "protocol": "openid-connect",
                "attributes": {
                    "realm_client": "false",
                    "post.logout.redirect.uris": "+"
                },
                "authenticationFlowBindingOverrides": {},
                "fullScopeAllowed": false,
                "nodeReRegistrationTimeout": 0,
                "defaultClientScopes": [
                    "web-origins",
                    "acr",
                    "profile",
                    "roles",
                    "basic",
                    "email"
                ],
                "optionalClientScopes": [
                    "address",
                    "phone",
                    "organization",
                    "offline_access",
                    "microprofile-jwt"
                ]
            },
            {
                "id": "868d3b35-8a1e-4570-8e0e-f8da38f96d90",
                "clientId": "account-console",
                "name": "${client_account-console}",
                "rootUrl": "${authBaseUrl}",
                "baseUrl": "/realms/spring-microservices-security-realm/account/",
                "surrogateAuthRequired": false,
                "enabled": true,
                "alwaysDisplayInConsole": false,
                "clientAuthenticatorType": "client-secret",
                "redirectUris": [
                    "/realms/spring-microservices-security-realm/account/*"
                ],
                "webOrigins": [],
                "notBefore": 0,
                "bearerOnly": false,
                "consentRequired": false,
                "standardFlowEnabled": true,
                "implicitFlowEnabled": false,
                "directAccessGrantsEnabled": false,
                "serviceAccountsEnabled": false,
                "publicClient": true,
                "frontchannelLogout": false,
                "protocol": "openid-connect",
                "attributes": {
                    "realm_client": "false",
                    "post.logout.redirect.uris": "+",
                    "pkce.code.challenge.method": "S256"
                },
                "authenticationFlowBindingOverrides": {},
                "fullScopeAllowed": false,
                "nodeReRegistrationTimeout": 0,
                "protocolMappers": [
                    {
                        "id": "12fe87cc-c54a-4d14-b0bc-cf5a48c47111",
                        "name": "audience resolve",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-audience-resolve-mapper",
                        "consentRequired": false,
                        "config": {}
                    }
                ],
                "defaultClientScopes": [
                    "web-origins",
                    "acr",
                    "profile",
                    "roles",
                    "basic",
                    "email"
                ],
                "optionalClientScopes": [
                    "address",
                    "phone",
                    "organization",
                    "offline_access",
                    "microprofile-jwt"
                ]
            },
            {
                "id": "596b3bd3-5dc7-4de6-a74d-287d38fbf346",
                "clientId": "admin-cli",
                "name": "${client_admin-cli}",
                "surrogateAuthRequired": false,
                "enabled": true,
                "alwaysDisplayInConsole": false,
                "clientAuthenticatorType": "client-secret",
                "redirectUris": [],
                "webOrigins": [],
                "notBefore": 0,
                "bearerOnly": false,
                "consentRequired": false,
                "standardFlowEnabled": false,
                "implicitFlowEnabled": false,
                "directAccessGrantsEnabled": true,
                "serviceAccountsEnabled": false,
                "publicClient": true,
                "frontchannelLogout": false,
                "protocol": "openid-connect",
                "attributes": {
                    "realm_client": "false",
                    "client.use.lightweight.access.token.enabled": "true"
                },
                "authenticationFlowBindingOverrides": {},
                "fullScopeAllowed": true,
                "nodeReRegistrationTimeout": 0,
                "defaultClientScopes": [
                    "web-origins",
                    "acr",
                    "profile",
                    "roles",
                    "basic",
                    "email"
                ],
                "optionalClientScopes": [
                    "address",
                    "phone",
                    "organization",
                    "offline_access",
                    "microprofile-jwt"
                ]
            },
            {
                "id": "12660fd4-faec-47c2-96ea-042eadc45e2d",
                "clientId": "angular-client",
                "name": "",
                "description": "",
                "rootUrl": "",
                "adminUrl": "",
                "baseUrl": "",
                "surrogateAuthRequired": false,
                "enabled": true,
                "alwaysDisplayInConsole": false,
                "clientAuthenticatorType": "client-secret",
                "redirectUris": [
                    "http://localhost:4200"
                ],
                "webOrigins": [
                    "*"
                ],
                "notBefore": 0,
                "bearerOnly": false,
                "consentRequired": false,
                "standardFlowEnabled": true,
                "implicitFlowEnabled": false,
                "directAccessGrantsEnabled": false,
                "serviceAccountsEnabled": false,
                "publicClient": true,
                "frontchannelLogout": true,
                "protocol": "openid-connect",
                "attributes": {
                    "realm_client": "false",
                    "oidc.ciba.grant.enabled": "false",
                    "backchannel.logout.session.required": "true",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "backchannel.logout.revoke.offline.tokens": "false"
                },
                "authenticationFlowBindingOverrides": {},
                "fullScopeAllowed": true,
                "nodeReRegistrationTimeout": -1,
                "defaultClientScopes": [
                    "web-origins",
                    "acr",
                    "profile",
                    "roles",
                    "basic",
                    "email"
                ],
                "optionalClientScopes": [
                    "address",
                    "phone",
                    "organization",
                    "offline_access",
                    "microprofile-jwt"
                ]
            },
            {
                "id": "dec85fee-f0cf-4e93-b2e9-06b992cc9ef4",
                "clientId": "broker",
                "name": "${client_broker}",
                "surrogateAuthRequired": false,
                "enabled": true,
                "alwaysDisplayInConsole": false,
                "clientAuthenticatorType": "client-secret",
                "redirectUris": [],
                "webOrigins": [],
                "notBefore": 0,
                "bearerOnly": true,
                "consentRequired": false,
                "standardFlowEnabled": true,
                "implicitFlowEnabled": false,
                "directAccessGrantsEnabled": false,
                "serviceAccountsEnabled": false,
                "publicClient": false,
                "frontchannelLogout": false,
                "protocol": "openid-connect",
                "attributes": {
                    "realm_client": "true"
                },
                "authenticationFlowBindingOverrides": {},
                "fullScopeAllowed": false,
                "nodeReRegistrationTimeout": 0,
                "defaultClientScopes": [
                    "web-origins",
                    "acr",
                    "profile",
                    "roles",
                    "basic",
                    "email"
                ],
                "optionalClientScopes": [
                    "address",
                    "phone",
                    "organization",
                    "offline_access",
                    "microprofile-jwt"
                ]
            },
            {
                "id": "060aaa03-19e7-4854-a176-df006ea7329f",
                "clientId": "realm-management",
                "name": "${client_realm-management}",
                "surrogateAuthRequired": false,
                "enabled": true,
                "alwaysDisplayInConsole": false,
                "clientAuthenticatorType": "client-secret",
                "redirectUris": [],
                "webOrigins": [],
                "notBefore": 0,
                "bearerOnly": true,
                "consentRequired": false,
                "standardFlowEnabled": true,
                "implicitFlowEnabled": false,
                "directAccessGrantsEnabled": false,
                "serviceAccountsEnabled": false,
                "publicClient": false,
                "frontchannelLogout": false,
                "protocol": "openid-connect",
                "attributes": {
                    "realm_client": "true"
                },
                "authenticationFlowBindingOverrides": {},
                "fullScopeAllowed": false,
                "nodeReRegistrationTimeout": 0,
                "defaultClientScopes": [
                    "web-origins",
                    "acr",
                    "profile",
                    "roles",
                    "basic",
                    "email"
                ],
                "optionalClientScopes": [
                    "address",
                    "phone",
                    "organization",
                    "offline_access",
                    "microprofile-jwt"
                ]
            },
            {
                "id": "bbcae09b-9a82-4c53-b56a-f570b31f931d",
                "clientId": "security-admin-console",
                "name": "${client_security-admin-console}",
                "rootUrl": "${authAdminUrl}",
                "baseUrl": "/admin/spring-microservices-security-realm/console/",
                "surrogateAuthRequired": false,
                "enabled": true,
                "alwaysDisplayInConsole": false,
                "clientAuthenticatorType": "client-secret",
                "redirectUris": [
                    "/admin/spring-microservices-security-realm/console/*"
                ],
                "webOrigins": [
                    "+"
                ],
                "notBefore": 0,
                "bearerOnly": false,
                "consentRequired": false,
                "standardFlowEnabled": true,
                "implicitFlowEnabled": false,
                "directAccessGrantsEnabled": false,
                "serviceAccountsEnabled": false,
                "publicClient": true,
                "frontchannelLogout": false,
                "protocol": "openid-connect",
                "attributes": {
                    "realm_client": "false",
                    "client.use.lightweight.access.token.enabled": "true",
                    "post.logout.redirect.uris": "+",
                    "pkce.code.challenge.method": "S256"
                },
                "authenticationFlowBindingOverrides": {},
                "fullScopeAllowed": true,
                "nodeReRegistrationTimeout": 0,
                "protocolMappers": [
                    {
                        "id": "af075bd8-4885-463c-be8f-dde183505838",
                        "name": "locale",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "locale",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "locale",
                            "jsonType.label": "String"
                        }
                    }
                ],
                "defaultClientScopes": [
                    "web-origins",
                    "acr",
                    "profile",
                    "roles",
                    "basic",
                    "email"
                ],
                "optionalClientScopes": [
                    "address",
                    "phone",
                    "organization",
                    "offline_access",
                    "microprofile-jwt"
                ]
            },
            {
                "id": "8b844896-a8e1-4da5-a7c0-148e6dd985bf",
                "clientId": "spring-client-credentials-id",
                "name": "",
                "description": "",
                "rootUrl": "",
                "adminUrl": "",
                "baseUrl": "",
                "surrogateAuthRequired": false,
                "enabled": true,
                "alwaysDisplayInConsole": false,
                "clientAuthenticatorType": "client-secret",
                "secret": "**********",
                "redirectUris": [
                    "/*"
                ],
                "webOrigins": [
                    "/*"
                ],
                "notBefore": 0,
                "bearerOnly": false,
                "consentRequired": false,
                "standardFlowEnabled": false,
                "implicitFlowEnabled": false,
                "directAccessGrantsEnabled": false,
                "serviceAccountsEnabled": true,
                "publicClient": false,
                "frontchannelLogout": true,
                "protocol": "openid-connect",
                "attributes": {
                    "realm_client": "false",
                    "oidc.ciba.grant.enabled": "false",
                    "client.secret.creation.time": "1738099721",
                    "backchannel.logout.session.required": "true",
                    "oauth2.device.authorization.grant.enabled": "false",
                    "backchannel.logout.revoke.offline.tokens": "false"
                },
                "authenticationFlowBindingOverrides": {},
                "fullScopeAllowed": true,
                "nodeReRegistrationTimeout": -1,
                "defaultClientScopes": [
                    "web-origins",
                    "service_account",
                    "acr",
                    "profile",
                    "roles",
                    "basic",
                    "email"
                ],
                "optionalClientScopes": [
                    "address",
                    "phone",
                    "organization",
                    "offline_access",
                    "microprofile-jwt"
                ]
            }
        ],
        "clientScopes": [
            {
                "id": "a6a2fa8c-6408-4a0f-a959-932a2f281003",
                "name": "profile",
                "description": "OpenID Connect built-in scope: profile",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "true",
                    "consent.screen.text": "${profileScopeConsentText}",
                    "display.on.consent.screen": "true"
                },
                "protocolMappers": [
                    {
                        "id": "02b99ba0-b30a-4e91-b402-078273aaa890",
                        "name": "full name",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-full-name-mapper",
                        "consentRequired": false,
                        "config": {
                            "id.token.claim": "true",
                            "introspection.token.claim": "true",
                            "access.token.claim": "true",
                            "userinfo.token.claim": "true"
                        }
                    },
                    {
                        "id": "d5df9e6a-8572-470c-97f9-f2c0988242e4",
                        "name": "given name",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "firstName",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "given_name",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "f510a34b-c11f-46c6-99f4-9c98039f5a61",
                        "name": "birthdate",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "birthdate",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "birthdate",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "992c04c0-679e-42f1-b77e-530c5d716c06",
                        "name": "family name",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "lastName",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "family_name",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "8d6eb16a-f05a-4356-bfdb-572601e435e0",
                        "name": "zoneinfo",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "zoneinfo",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "zoneinfo",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "efe5864a-5f2d-4886-918b-14e47e0be9df",
                        "name": "profile",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "profile",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "profile",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "e55e13ce-5d99-4924-9177-0f2857bb1258",
                        "name": "updated at",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "updatedAt",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "updated_at",
                            "jsonType.label": "long"
                        }
                    },
                    {
                        "id": "538f58ca-f04a-4678-838b-9298f7e8168a",
                        "name": "nickname",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "nickname",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "nickname",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "2213bcc1-2116-4368-8daa-370bfe777a04",
                        "name": "picture",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "picture",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "picture",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "38e54ab5-cfda-4fdb-8ad8-6c76e3d8c541",
                        "name": "website",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "website",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "website",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "6496b871-0150-4c6d-b69b-c589ba7dd977",
                        "name": "locale",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "locale",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "locale",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "fca461df-d2d5-4c50-89dc-6999c8c2e2f5",
                        "name": "username",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "username",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "preferred_username",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "39d2a44a-cf93-4975-9d72-31cb78f4c177",
                        "name": "gender",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "gender",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "gender",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "4dc7b266-31b8-44fb-9881-fae1b3c0d3be",
                        "name": "middle name",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "middleName",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "middle_name",
                            "jsonType.label": "String"
                        }
                    }
                ]
            },
            {
                "id": "899ced38-f227-4d25-a65d-9bfb7f921461",
                "name": "organization",
                "description": "Additional claims about the organization a subject belongs to",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "true",
                    "consent.screen.text": "${organizationScopeConsentText}",
                    "display.on.consent.screen": "true"
                },
                "protocolMappers": [
                    {
                        "id": "9459644a-a877-44c3-b1aa-fa4da7b560ba",
                        "name": "organization",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-organization-membership-mapper",
                        "consentRequired": false,
                        "config": {
                            "id.token.claim": "true",
                            "introspection.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "organization",
                            "jsonType.label": "String",
                            "multivalued": "true"
                        }
                    }
                ]
            },
            {
                "id": "f6c786fc-2d84-4b8a-bebe-70d2303300e4",
                "name": "web-origins",
                "description": "OpenID Connect scope for add allowed web origins to the access token",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "false",
                    "consent.screen.text": "",
                    "display.on.consent.screen": "false"
                },
                "protocolMappers": [
                    {
                        "id": "9f01f087-9b46-47a1-b943-75d04e8da3d3",
                        "name": "allowed web origins",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-allowed-origins-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "access.token.claim": "true"
                        }
                    }
                ]
            },
            {
                "id": "26580049-2a11-44f2-98f1-2da51cafce10",
                "name": "roles",
                "description": "OpenID Connect scope for add user roles to the access token",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "false",
                    "consent.screen.text": "${rolesScopeConsentText}",
                    "display.on.consent.screen": "true"
                },
                "protocolMappers": [
                    {
                        "id": "f8c43baf-5f2a-4447-a805-e0caa533b791",
                        "name": "realm roles",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-realm-role-mapper",
                        "consentRequired": false,
                        "config": {
                            "user.attribute": "foo",
                            "introspection.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "realm_access.roles",
                            "jsonType.label": "String",
                            "multivalued": "true"
                        }
                    },
                    {
                        "id": "a30210e1-b148-4ceb-b883-6150e95e6413",
                        "name": "client roles",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-client-role-mapper",
                        "consentRequired": false,
                        "config": {
                            "user.attribute": "foo",
                            "introspection.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "resource_access.${client_id}.roles",
                            "jsonType.label": "String",
                            "multivalued": "true"
                        }
                    },
                    {
                        "id": "ad627de9-8626-400c-a94c-a9f8f7dc3d2c",
                        "name": "audience resolve",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-audience-resolve-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "access.token.claim": "true"
                        }
                    }
                ]
            },
            {
                "id": "e04e8998-0c8f-4c9f-bfc9-5545dede82ae",
                "name": "offline_access",
                "description": "OpenID Connect built-in scope: offline_access",
                "protocol": "openid-connect",
                "attributes": {
                    "consent.screen.text": "${offlineAccessScopeConsentText}",
                    "display.on.consent.screen": "true"
                }
            },
            {
                "id": "89047a34-77ff-424d-b226-d257624fadef",
                "name": "acr",
                "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "false",
                    "display.on.consent.screen": "false"
                },
                "protocolMappers": [
                    {
                        "id": "b020e753-f67f-4513-ace0-d31adced1f27",
                        "name": "acr loa level",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-acr-mapper",
                        "consentRequired": false,
                        "config": {
                            "id.token.claim": "true",
                            "introspection.token.claim": "true",
                            "access.token.claim": "true"
                        }
                    }
                ]
            },
            {
                "id": "027612dd-e9fc-4780-904a-a71b3cc8f156",
                "name": "phone",
                "description": "OpenID Connect built-in scope: phone",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "true",
                    "consent.screen.text": "${phoneScopeConsentText}",
                    "display.on.consent.screen": "true"
                },
                "protocolMappers": [
                    {
                        "id": "12b13fe6-8a95-48a0-9818-549a8c4620fa",
                        "name": "phone number verified",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "phoneNumberVerified",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "phone_number_verified",
                            "jsonType.label": "boolean"
                        }
                    },
                    {
                        "id": "2d64a225-8448-4a92-bae4-b85a495ed5de",
                        "name": "phone number",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "phoneNumber",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "phone_number",
                            "jsonType.label": "String"
                        }
                    }
                ]
            },
            {
                "id": "f20169f9-0885-49f7-a09b-1b95393dd3e4",
                "name": "saml_organization",
                "description": "Organization Membership",
                "protocol": "saml",
                "attributes": {
                    "display.on.consent.screen": "false"
                },
                "protocolMappers": [
                    {
                        "id": "1ab02f52-6ba2-4fc2-9856-3bab676f1528",
                        "name": "organization",
                        "protocol": "saml",
                        "protocolMapper": "saml-organization-membership-mapper",
                        "consentRequired": false,
                        "config": {}
                    }
                ]
            },
            {
                "id": "db67c273-5476-4db5-8ecf-1f8b2e82fd89",
                "name": "email",
                "description": "OpenID Connect built-in scope: email",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "true",
                    "consent.screen.text": "${emailScopeConsentText}",
                    "display.on.consent.screen": "true"
                },
                "protocolMappers": [
                    {
                        "id": "6e68f1f2-8fe8-46ee-a47b-aae846dd03a0",
                        "name": "email verified",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-property-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "emailVerified",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "email_verified",
                            "jsonType.label": "boolean"
                        }
                    },
                    {
                        "id": "856ea5f4-8040-4726-adba-9bb6b7f7d23e",
                        "name": "email",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "email",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "email",
                            "jsonType.label": "String"
                        }
                    }
                ]
            },
            {
                "id": "6097f68d-dda0-43a2-95d0-6f5631e7b060",
                "name": "address",
                "description": "OpenID Connect built-in scope: address",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "true",
                    "consent.screen.text": "${addressScopeConsentText}",
                    "display.on.consent.screen": "true"
                },
                "protocolMappers": [
                    {
                        "id": "f06e474f-907b-4028-9b06-48b2fa9cfde1",
                        "name": "address",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-address-mapper",
                        "consentRequired": false,
                        "config": {
                            "user.attribute.formatted": "formatted",
                            "user.attribute.country": "country",
                            "introspection.token.claim": "true",
                            "user.attribute.postal_code": "postal_code",
                            "userinfo.token.claim": "true",
                            "user.attribute.street": "street",
                            "id.token.claim": "true",
                            "user.attribute.region": "region",
                            "access.token.claim": "true",
                            "user.attribute.locality": "locality"
                        }
                    }
                ]
            },
            {
                "id": "6466d68d-e6ab-4384-be11-a14f84443f53",
                "name": "microprofile-jwt",
                "description": "Microprofile - JWT built-in scope",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "false"
                },
                "protocolMappers": [
                    {
                        "id": "dbf1b75a-f62e-4465-9625-c58d2ba7ad1a",
                        "name": "upn",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "username",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "upn",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "b889277a-918e-499c-83c1-e6a368587019",
                        "name": "groups",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-realm-role-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "multivalued": "true",
                            "user.attribute": "foo",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "groups",
                            "jsonType.label": "String"
                        }
                    }
                ]
            },
            {
                "id": "5d9274e3-e1c6-4d40-bd1c-d79d20543a95",
                "name": "service_account",
                "description": "Specific scope for a client enabled for service accounts",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "false",
                    "display.on.consent.screen": "false"
                },
                "protocolMappers": [
                    {
                        "id": "ea4466f9-48d3-4d1f-b66e-12828ab4558c",
                        "name": "Client Host",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usersessionmodel-note-mapper",
                        "consentRequired": false,
                        "config": {
                            "user.session.note": "clientHost",
                            "id.token.claim": "true",
                            "introspection.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "clientHost",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "310217f4-e8c5-4b4e-89ae-4a4515b2d57e",
                        "name": "Client IP Address",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usersessionmodel-note-mapper",
                        "consentRequired": false,
                        "config": {
                            "user.session.note": "clientAddress",
                            "id.token.claim": "true",
                            "introspection.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "clientAddress",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "47028ded-8812-4677-88e2-821ea8a22a62",
                        "name": "Client ID",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usersessionmodel-note-mapper",
                        "consentRequired": false,
                        "config": {
                            "user.session.note": "client_id",
                            "id.token.claim": "true",
                            "introspection.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "client_id",
                            "jsonType.label": "String"
                        }
                    }
                ]
            },
            {
                "id": "456a6d28-1009-4b09-b0e9-6db85d789fba",
                "name": "basic",
                "description": "OpenID Connect scope for add all basic claims to the token",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "false",
                    "display.on.consent.screen": "false"
                },
                "protocolMappers": [
                    {
                        "id": "495e3727-d0e0-4d21-8a2a-a4d02ea368e3",
                        "name": "auth_time",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usersessionmodel-note-mapper",
                        "consentRequired": false,
                        "config": {
                            "user.session.note": "AUTH_TIME",
                            "id.token.claim": "true",
                            "introspection.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "auth_time",
                            "jsonType.label": "long"
                        }
                    },
                    {
                        "id": "c3beb35d-50ef-4f27-b46b-eed894896c82",
                        "name": "sub",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-sub-mapper",
                        "consentRequired": false,
                        "config": {
                            "introspection.token.claim": "true",
                            "access.token.claim": "true"
                        }
                    }
                ]
            },
            {
                "id": "98efb798-58fc-4cea-8b6a-1016489c63dc",
                "name": "role_list",
                "description": "SAML role list",
                "protocol": "saml",
                "attributes": {
                    "consent.screen.text": "${samlRoleListScopeConsentText}",
                    "display.on.consent.screen": "true"
                },
                "protocolMappers": [
                    {
                        "id": "8ad8e25b-ec1c-4e67-9359-af70671be5c6",
                        "name": "role list",
                        "protocol": "saml",
                        "protocolMapper": "saml-role-list-mapper",
                        "consentRequired": false,
                        "config": {
                            "single": "false",
                            "attribute.nameformat": "Basic",
                            "attribute.name": "Role"
                        }
                    }
                ]
            }
        ],
        "defaultDefaultClientScopes": [
            "role_list",
            "saml_organization",
            "profile",
            "email",
            "roles",
            "web-origins",
            "acr",
            "basic"
        ],
        "defaultOptionalClientScopes": [
            "offline_access",
            "address",
            "phone",
            "microprofile-jwt",
            "organization"
        ],
        "browserSecurityHeaders": {
            "contentSecurityPolicyReportOnly": "",
            "xContentTypeOptions": "nosniff",
            "referrerPolicy": "no-referrer",
            "xRobotsTag": "none",
            "xFrameOptions": "SAMEORIGIN",
            "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
            "xXSSProtection": "1; mode=block",
            "strictTransportSecurity": "max-age=31536000; includeSubDomains"
        },
        "smtpServer": {},
        "loginTheme": "",
        "accountTheme": "",
        "adminTheme": "keycloak.v2",
        "emailTheme": "",
        "eventsEnabled": false,
        "eventsListeners": [
            "jboss-logging"
        ],
        "enabledEventTypes": [],
        "adminEventsEnabled": false,
        "adminEventsDetailsEnabled": false,
        "identityProviders": [],
        "identityProviderMappers": [],
        "components": {
            "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
                {
                    "id": "4b5b2252-db9a-464c-bbdd-600221ab95f9",
                    "name": "Consent Required",
                    "providerId": "consent-required",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {}
                },
                {
                    "id": "80560180-acec-4333-a985-5c17fb2ce54f",
                    "name": "Max Clients Limit",
                    "providerId": "max-clients",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {
                        "max-clients": [
                            "200"
                        ]
                    }
                },
                {
                    "id": "c6484356-860e-44d2-ad65-3d3357978497",
                    "name": "Trusted Hosts",
                    "providerId": "trusted-hosts",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {
                        "host-sending-registration-request-must-match": [
                            "true"
                        ],
                        "client-uris-must-match": [
                            "true"
                        ]
                    }
                },
                {
                    "id": "03dfbe5d-7d5d-4afa-a6d6-9e174230f95c",
                    "name": "Full Scope Disabled",
                    "providerId": "scope",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {}
                },
                {
                    "id": "07ff41c2-9543-467a-bc29-c7776a9bc3aa",
                    "name": "Allowed Client Scopes",
                    "providerId": "allowed-client-templates",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {
                        "allow-default-scopes": [
                            "true"
                        ]
                    }
                },
                {
                    "id": "b21eb9c8-44e8-4289-9c93-76f5fe26bf19",
                    "name": "Allowed Protocol Mapper Types",
                    "providerId": "allowed-protocol-mappers",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {
                        "allowed-protocol-mapper-types": [
                            "saml-role-list-mapper",
                            "saml-user-property-mapper",
                            "oidc-usermodel-attribute-mapper",
                            "oidc-address-mapper",
                            "saml-user-attribute-mapper",
                            "oidc-full-name-mapper",
                            "oidc-sha256-pairwise-sub-mapper",
                            "oidc-usermodel-property-mapper"
                        ]
                    }
                },
                {
                    "id": "5bc66460-8c95-43d3-8064-add1c3c8a048",
                    "name": "Allowed Client Scopes",
                    "providerId": "allowed-client-templates",
                    "subType": "authenticated",
                    "subComponents": {},
                    "config": {
                        "allow-default-scopes": [
                            "true"
                        ]
                    }
                },
                {
                    "id": "89c16c57-742c-4134-bb9d-3d96088dad94",
                    "name": "Allowed Protocol Mapper Types",
                    "providerId": "allowed-protocol-mappers",
                    "subType": "authenticated",
                    "subComponents": {},
                    "config": {
                        "allowed-protocol-mapper-types": [
                            "saml-role-list-mapper",
                            "oidc-usermodel-attribute-mapper",
                            "saml-user-attribute-mapper",
                            "oidc-address-mapper",
                            "oidc-usermodel-property-mapper",
                            "saml-user-property-mapper",
                            "oidc-sha256-pairwise-sub-mapper",
                            "oidc-full-name-mapper"
                        ]
                    }
                }
            ],
            "org.keycloak.keys.KeyProvider": [
                {
                    "id": "cb267b5f-fa49-43f6-b28a-719ca62915c9",
                    "name": "rsa-enc-generated",
                    "providerId": "rsa-enc-generated",
                    "subComponents": {},
                    "config": {
                        "priority": [
                            "100"
                        ],
                        "algorithm": [
                            "RSA-OAEP"
                        ]
                    }
                },
                {
                    "id": "20c2ea9f-a417-4d10-b4f8-01f1f0bebff8",
                    "name": "aes-generated",
                    "providerId": "aes-generated",
                    "subComponents": {},
                    "config": {
                        "priority": [
                            "100"
                        ]
                    }
                },
                {
                    "id": "b7ff8295-676c-4a68-a65b-59a801e2f288",
                    "name": "rsa-generated",
                    "providerId": "rsa-generated",
                    "subComponents": {},
                    "config": {
                        "priority": [
                            "100"
                        ]
                    }
                },
                {
                    "id": "18b27aa6-e75f-44a2-a747-0c4cd46a64c3",
                    "name": "hmac-generated-hs512",
                    "providerId": "hmac-generated",
                    "subComponents": {},
                    "config": {
                        "priority": [
                            "100"
                        ],
                        "algorithm": [
                            "HS512"
                        ]
                    }
                }
            ]
        },
        "internationalizationEnabled": false,
        "supportedLocales": [],
        "authenticationFlows": [
            {
                "id": "f06bfde7-59d1-47f9-b747-07601acf50f5",
                "alias": "Account verification options",
                "description": "Method with which to verity the existing account",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "idp-email-verification",
                        "authenticatorFlow": false,
                        "requirement": "ALTERNATIVE",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticatorFlow": true,
                        "requirement": "ALTERNATIVE",
                        "priority": 20,
                        "autheticatorFlow": true,
                        "flowAlias": "Verify Existing Account by Re-authentication",
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "a54f3c30-6336-411b-ad5c-572b18108ddf",
                "alias": "Browser - Conditional OTP",
                "description": "Flow to determine if the OTP is required for the authentication",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "conditional-user-configured",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "auth-otp-form",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "4490ea35-16bc-4515-a623-ace73ecc63f1",
                "alias": "Browser - Conditional Organization",
                "description": "Flow to determine if the organization identity-first login is to be used",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "conditional-user-configured",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "organization",
                        "authenticatorFlow": false,
                        "requirement": "ALTERNATIVE",
                        "priority": 20,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "e8a6483e-f732-4365-b1fd-4d71324d0ed7",
                "alias": "Direct Grant - Conditional OTP",
                "description": "Flow to determine if the OTP is required for the authentication",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "conditional-user-configured",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "direct-grant-validate-otp",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "4b43c82a-9b69-4102-bb74-58fa916c73d2",
                "alias": "First Broker Login - Conditional Organization",
                "description": "Flow to determine if the authenticator that adds organization members is to be used",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "conditional-user-configured",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "idp-add-organization-member",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "cc15a882-be79-4d31-b82b-2046d3610363",
                "alias": "First broker login - Conditional OTP",
                "description": "Flow to determine if the OTP is required for the authentication",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "conditional-user-configured",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "auth-otp-form",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "70f3a992-7f14-4ad5-8106-437977776868",
                "alias": "Handle Existing Account",
                "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "idp-confirm-link",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticatorFlow": true,
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "autheticatorFlow": true,
                        "flowAlias": "Account verification options",
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "77836d98-f4be-40d1-92c3-3025fcb3331a",
                "alias": "Organization",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticatorFlow": true,
                        "requirement": "CONDITIONAL",
                        "priority": 10,
                        "autheticatorFlow": true,
                        "flowAlias": "Browser - Conditional Organization",
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "55b2e3ee-5c0a-496e-a52f-0bd69c0e7ce6",
                "alias": "Reset - Conditional OTP",
                "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "conditional-user-configured",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "reset-otp",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "5b227465-f210-49b1-88d0-6fbcfd83fa45",
                "alias": "User creation or linking",
                "description": "Flow for the existing/non-existing user alternatives",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticatorConfig": "create unique user config",
                        "authenticator": "idp-create-user-if-unique",
                        "authenticatorFlow": false,
                        "requirement": "ALTERNATIVE",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticatorFlow": true,
                        "requirement": "ALTERNATIVE",
                        "priority": 20,
                        "autheticatorFlow": true,
                        "flowAlias": "Handle Existing Account",
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "0b51fdac-831a-4afe-b1ee-c167b5e17595",
                "alias": "Verify Existing Account by Re-authentication",
                "description": "Reauthentication of existing account",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "idp-username-password-form",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticatorFlow": true,
                        "requirement": "CONDITIONAL",
                        "priority": 20,
                        "autheticatorFlow": true,
                        "flowAlias": "First broker login - Conditional OTP",
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "44ada04d-f2b3-443e-ac67-e70bb4575131",
                "alias": "browser",
                "description": "Browser based authentication",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "auth-cookie",
                        "authenticatorFlow": false,
                        "requirement": "ALTERNATIVE",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "auth-spnego",
                        "authenticatorFlow": false,
                        "requirement": "DISABLED",
                        "priority": 20,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "identity-provider-redirector",
                        "authenticatorFlow": false,
                        "requirement": "ALTERNATIVE",
                        "priority": 25,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticatorFlow": true,
                        "requirement": "ALTERNATIVE",
                        "priority": 26,
                        "autheticatorFlow": true,
                        "flowAlias": "Organization",
                        "userSetupAllowed": false
                    },
                    {
                        "authenticatorFlow": true,
                        "requirement": "ALTERNATIVE",
                        "priority": 30,
                        "autheticatorFlow": true,
                        "flowAlias": "forms",
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "5f0e012e-d627-4611-ab68-953354127755",
                "alias": "clients",
                "description": "Base authentication for clients",
                "providerId": "client-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "client-secret",
                        "authenticatorFlow": false,
                        "requirement": "ALTERNATIVE",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "client-jwt",
                        "authenticatorFlow": false,
                        "requirement": "ALTERNATIVE",
                        "priority": 20,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "client-secret-jwt",
                        "authenticatorFlow": false,
                        "requirement": "ALTERNATIVE",
                        "priority": 30,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "client-x509",
                        "authenticatorFlow": false,
                        "requirement": "ALTERNATIVE",
                        "priority": 40,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "dbe325df-a464-44e8-a4f1-0c91c776d285",
                "alias": "direct grant",
                "description": "OpenID Connect Resource Owner Grant",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "direct-grant-validate-username",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "direct-grant-validate-password",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticatorFlow": true,
                        "requirement": "CONDITIONAL",
                        "priority": 30,
                        "autheticatorFlow": true,
                        "flowAlias": "Direct Grant - Conditional OTP",
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "d661b90a-b2d5-42df-ae69-cd4e33c7e8fc",
                "alias": "docker auth",
                "description": "Used by Docker clients to authenticate against the IDP",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "docker-http-basic-authenticator",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "eaff476a-baba-4da7-bdc9-2c6a21c67beb",
                "alias": "first broker login",
                "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticatorConfig": "review profile config",
                        "authenticator": "idp-review-profile",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticatorFlow": true,
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "autheticatorFlow": true,
                        "flowAlias": "User creation or linking",
                        "userSetupAllowed": false
                    },
                    {
                        "authenticatorFlow": true,
                        "requirement": "CONDITIONAL",
                        "priority": 50,
                        "autheticatorFlow": true,
                        "flowAlias": "First Broker Login - Conditional Organization",
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "5d7779ad-f9f9-4924-bb20-8da2c1b56025",
                "alias": "forms",
                "description": "Username, password, otp and other auth forms.",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "auth-username-password-form",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticatorFlow": true,
                        "requirement": "CONDITIONAL",
                        "priority": 20,
                        "autheticatorFlow": true,
                        "flowAlias": "Browser - Conditional OTP",
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "aae1eb9a-bab7-4874-ac28-f846a553d6a6",
                "alias": "registration",
                "description": "Registration flow",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "registration-page-form",
                        "authenticatorFlow": true,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": true,
                        "flowAlias": "registration form",
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "dfea7454-2ca6-49c4-9531-e95a498c1bf7",
                "alias": "registration form",
                "description": "Registration form",
                "providerId": "form-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "registration-user-creation",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "registration-password-action",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 50,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "registration-recaptcha-action",
                        "authenticatorFlow": false,
                        "requirement": "DISABLED",
                        "priority": 60,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "registration-terms-and-conditions",
                        "authenticatorFlow": false,
                        "requirement": "DISABLED",
                        "priority": 70,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "15a7df1b-0498-4344-ab25-18c673c8c373",
                "alias": "reset credentials",
                "description": "Reset credentials for a user if they forgot their password or something",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "reset-credentials-choose-user",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "reset-credential-email",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticator": "reset-password",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 30,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    },
                    {
                        "authenticatorFlow": true,
                        "requirement": "CONDITIONAL",
                        "priority": 40,
                        "autheticatorFlow": true,
                        "flowAlias": "Reset - Conditional OTP",
                        "userSetupAllowed": false
                    }
                ]
            },
            {
                "id": "db021ee8-cad7-425d-ad49-500cd2e889cf",
                "alias": "saml ecp",
                "description": "SAML ECP Profile Authentication Flow",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "http-basic-authenticator",
                        "authenticatorFlow": false,
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "autheticatorFlow": false,
                        "userSetupAllowed": false
                    }
                ]
            }
        ],
        "authenticatorConfig": [
            {
                "id": "8ea9c0bb-cf38-4950-bb54-8703c4c95df0",
                "alias": "create unique user config",
                "config": {
                    "require.password.update.after.registration": "false"
                }
            },
            {
                "id": "0dd4d59d-5277-41cf-9921-35e53fb3edeb",
                "alias": "review profile config",
                "config": {
                    "update.profile.on.first.login": "missing"
                }
            }
        ],
        "requiredActions": [
            {
                "alias": "CONFIGURE_TOTP",
                "name": "Configure OTP",
                "providerId": "CONFIGURE_TOTP",
                "enabled": true,
                "defaultAction": false,
                "priority": 10,
                "config": {}
            },
            {
                "alias": "TERMS_AND_CONDITIONS",
                "name": "Terms and Conditions",
                "providerId": "TERMS_AND_CONDITIONS",
                "enabled": false,
                "defaultAction": false,
                "priority": 20,
                "config": {}
            },
            {
                "alias": "UPDATE_PASSWORD",
                "name": "Update Password",
                "providerId": "UPDATE_PASSWORD",
                "enabled": true,
                "defaultAction": false,
                "priority": 30,
                "config": {}
            },
            {
                "alias": "UPDATE_PROFILE",
                "name": "Update Profile",
                "providerId": "UPDATE_PROFILE",
                "enabled": true,
                "defaultAction": false,
                "priority": 40,
                "config": {}
            },
            {
                "alias": "VERIFY_EMAIL",
                "name": "Verify Email",
                "providerId": "VERIFY_EMAIL",
                "enabled": true,
                "defaultAction": false,
                "priority": 50,
                "config": {}
            },
            {
                "alias": "delete_account",
                "name": "Delete Account",
                "providerId": "delete_account",
                "enabled": false,
                "defaultAction": false,
                "priority": 60,
                "config": {}
            },
            {
                "alias": "webauthn-register",
                "name": "Webauthn Register",
                "providerId": "webauthn-register",
                "enabled": true,
                "defaultAction": false,
                "priority": 70,
                "config": {}
            },
            {
                "alias": "webauthn-register-passwordless",
                "name": "Webauthn Register Passwordless",
                "providerId": "webauthn-register-passwordless",
                "enabled": true,
                "defaultAction": false,
                "priority": 80,
                "config": {}
            },
            {
                "alias": "VERIFY_PROFILE",
                "name": "Verify Profile",
                "providerId": "VERIFY_PROFILE",
                "enabled": true,
                "defaultAction": false,
                "priority": 90,
                "config": {}
            },
            {
                "alias": "delete_credential",
                "name": "Delete Credential",
                "providerId": "delete_credential",
                "enabled": true,
                "defaultAction": false,
                "priority": 100,
                "config": {}
            },
            {
                "alias": "update_user_locale",
                "name": "Update User Locale",
                "providerId": "update_user_locale",
                "enabled": true,
                "defaultAction": false,
                "priority": 1000,
                "config": {}
            }
        ],
        "browserFlow": "browser",
        "registrationFlow": "registration",
        "directGrantFlow": "direct grant",
        "resetCredentialsFlow": "reset credentials",
        "clientAuthenticationFlow": "clients",
        "dockerAuthenticationFlow": "docker auth",
        "firstBrokerLoginFlow": "first broker login",
        "attributes": {
            "cibaBackchannelTokenDeliveryMode": "poll",
            "cibaAuthRequestedUserHint": "login_hint",
            "oauth2DevicePollingInterval": "5",
            "clientOfflineSessionMaxLifespan": "0",
            "clientSessionIdleTimeout": "0",
            "clientOfflineSessionIdleTimeout": "0",
            "cibaInterval": "5",
            "realmReusableOtpCode": "false",
            "cibaExpiresIn": "120",
            "oauth2DeviceCodeLifespan": "600",
            "parRequestUriLifespan": "60",
            "clientSessionMaxLifespan": "0",
            "frontendUrl": "",
            "acr.loa.map": "{}",
            "darkMode": "true"
        },
        "keycloakVersion": "26.1.0",
        "userManagedAccessAllowed": false,
        "organizationsEnabled": false,
        "verifiableCredentialsEnabled": false,
        "adminPermissionsEnabled": false,
        "clientProfiles": {
            "profiles": []
        },
        "clientPolicies": {
            "policies": []
        }
    }